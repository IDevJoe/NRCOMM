PACKET STRUCTURE DOCUMENTATION
-------------------------------

Layer 1
    00 00 00 00 00 00 00 00 00 00 ***
    1  2  (    3    ) (    4    ) (5)
    
    1. Reserved (always 00)
    2. Packet Type (see packet types below)
    3. Nonce (4b, uint)
    4. Content Size (4b, unit)
    5. Payload Data
    
Packet Types
    01 - Discover (C, UDP)
    02 - Discover Reply (S, UDP)
    03 - Hello (S, SSL)
    04 - Publish (C, SSL)
    05 - Publish Reply (S, SSL)
    06 - Discover App Instances (C, SSL)
    07 - App Instance Reply (S, SSL)
    08 - Open Socket (C, SSL)
    09 - Socket Control (C/S, SSL)
    0A - App Data (C/S, SSL)
    

(01) Discover - NREP listens for UDP broadcasts on port 2888
    Packet Length: 0
    
(02) Discover Reply - A reply with communication information
    Packet Length: Variable
    
    00 00 00 00 00 00 00 00 *** 00 00 00 00 ***
    (    1    ) (    2    ) (3) (    4    ) (5)
    
    1. TCP Port Number (4b, uint)
    2. X509 Length (4b, uint)
    3. X509 Certificate (Variable)

    ** NREP MAY BE CONFIGURED TO COMMUNICATE INSECURELY. IF THIS IS THE CASE, THE X509 LENGTH WILL BE 0,
       AND THE X509 CERTIFICATE WILL BE COMPLETELY OMITTED. CLIENTS SHOULD DISPLAY A WARNING BEFORE ESTABLISHING
       A CONNECTION.

(03) Hello - Sent to the client to acknowledge a successful connection and SSL handshake
    Packet Length: 0

(04) Publish - Sent to publish an app to the entry point and routers.
    00 00 00 00 ***
    (    1    ) (2)
    
    1. App Description Length (4b, uint)
    2. App Description
    
(05) Publish Reply - Send to acknowledge a publish request
    Packet Length: 11
    
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    1  (             2             ) (             3             )
    
    1. Successful
    2. App ID
    3. Instance ID
    
(06) Discover App Instances - Sent to discover an app on the network
    Packet Length: 10
    
    00 00 00 00 00 00 00 00 00 00
    (             1             )
    
    1. App ID
    
(07) App Instance Reply - Contains a list of app instances on the network
    Packet Length: Variable, >=11
    
    00 [00 00 00 00 00 00 00 00 00 00]
    1  (              2              )
    
    1. Number of elements
    2. List of instance IDs
    
(08) Open Socket - Sent to request a socket to an app
    Packet Length: 10
    
    00 00 00 00 00 00 00 00 00 00
    (             1             )
    
    1. Instance ID to open socket to
    
    ** THIS BEGINS THE SOCKET NEGOTIATIONS. IT IS IMPERATIVE THAT A NONCE IS SENT
       WITH THIS REQUEST, AS THE FIRST SOCKET CONTROL SIGNAL WILL BE SENT WITH IT.
       
       OPEN SOCKET FLOW:
          OPEN SOCKET -> SOCKET CONTROL TO REQUESTOR WITH SOCKET ID -> SOCKET CONTROL TO RECEIVER
          -> RECEIVER ACKNOWLEDGES CONTROL AND ACCEPTS/REFUSES -> SOCKET CONTROL TO REQUESTOR
          -> DATA FLOW BEGINS

(09) Socket Control - Controls sockets
    [   Socket control packets differ from normal packets, in that it requires bitwise operations
        to be understood. The nonce for these packets will always be zeroed except when the
        OPEN ACK flag is set.                                                                       ]
        
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    (             1             ) 2  (            ?3?            )
    
    1. Socket ID
    2. Flags
    3. Instance ID (instance ID, sent only if Open Request bit is sent)
        
    Flag Bits
        Bit 1 (>> 7 & 0x1). Open ACK (S ONLY)
            Acknowledges an open request, and allows the requestor to store the socket ID
        Bit 2 (>> 6 & 0x1). Open Request (S ONLY)
            ON when a new connection request is incoming.
        Bit 3 (>> 5 & 0x1). Accept Connection (C/RECEIVER ONLY)
            Accepts an incoming connection
        Bit 4 (>> 4 & 0x1). Refuse Connection (C/RECEIVER ONLY)
            Refuses an incoming connection
        Bit 5 (>> 3 & 0x1). Ready (S ONLY)
            Sent to the requestor when the connection is ready to accept data
        Bit 6 (>> 2 & 0x1). Close (ALL)
            Sent to close the connection
            
(OA) Socket Data - Sends data through the socket
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 ***
    (             1             ) (    2    ) (3)
    
    1. Socket ID
    2. Data Length
    3. Data